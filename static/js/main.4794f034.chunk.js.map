{"version":3,"sources":["components/EmployeeCard.js","components/EmployeeTable.js","App.js","reportWebVitals.js","index.js"],"names":["styles","td","border","textAlign","EmployeeCard","props","currentDate","moment","dob","format","style","src","picture","alt","first","last","phone","email","table","width","th","color","backgroundColor","alignText","thName","cursor","FetchEmployees","onClick","sortClick","currentSort","employees","map","employee","thumbnail","name","date","id","value","App","state","loading","copyOfEmployees","filteredEmployees","search","sortOrder","handleInputChange","event","preventDefault","word","searchTerm","target","toUpperCase","slice","setState","filteredArray","filter","el","startsWith","handleSortOnClick","sort","a","b","fetch","response","json","data","this","results","console","log","className","onChange","type","onKeyPress","e","key","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4794f034.chunk.js","sourcesContent":["import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst styles = {\r\n    td: {\r\n      border: \"1px solid black\",\r\n      textAlign: \"center\"\r\n    }\r\n  };\r\n\r\nexport default function EmployeeCard(props) {\r\n\r\n    const currentDate = moment(props.dob).format('MM/DD/YYYY');\r\n\r\n    return (\r\n        <tr>\r\n            <td style={styles.td}><img src={props.picture} alt=\"thumbnail headshot of employee\"></img></td>\r\n            <td style={styles.td}>{props.first + \" \" + props.last}</td>\r\n            <td style={styles.td}>{props.phone}</td>\r\n            <td style={styles.td}>{props.email}</td>\r\n            <td style={styles.td}>{currentDate}</td>\r\n        </tr>\r\n    );\r\n}","import React from \"react\";\r\nimport EmployeeCard from \"./EmployeeCard\";\r\n\r\nconst styles = {\r\n    table: {\r\n        border: \"1px solid black\",\r\n        width: \"80%\"\r\n    },\r\n    th: {\r\n        border: \"1px solid black\",\r\n        color: \"white\",\r\n        backgroundColor: \"#282c34\",\r\n        alignText: \"center\"\r\n    },\r\n    thName: {\r\n        border: \"1px solid black\",\r\n        color: \"white\",\r\n        backgroundColor: \"#282c34\",\r\n        alignText: \"center\",\r\n        cursor: \"pointer\"\r\n    }\r\n  };\r\n\r\nexport default function FetchEmployees(props) {\r\n    return (\r\n        <table style={styles.table}>\r\n            <tbody>\r\n                <tr>\r\n                    <th style={styles.th}>Image</th>\r\n                    <th onClick ={props.sortClick} style={styles.thName}>Name <span>{props.currentSort}</span></th>\r\n                    <th style={styles.th}>Phone</th>\r\n                    <th style={styles.th}>Email</th>\r\n                    <th style={styles.th}>DOB</th>\r\n                </tr>\r\n                {props.employees.map(employee =>\r\n                    <EmployeeCard\r\n                        key={employee.id.value}\r\n                        picture={employee.picture.thumbnail}\r\n                        first={employee.name.first}\r\n                        last={employee.name.last}\r\n                        phone={employee.phone}\r\n                        email={employee.email}\r\n                        dob={employee.dob.date}\r\n                    />)}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}","// import logo from './logo.svg';\nimport React from \"react\";\nimport './App.css';\nimport EmployeeTable from \"./components/EmployeeTable\";\n\n\nclass App extends React.Component {\n\n  state = {\n    loading: true,\n    employees: [],\n    copyOfEmployees: [],\n    filteredEmployees: [],\n    search: \"\",\n    sortOrder: \"\"\n  }\n\n  async componentDidMount() {\n    const url = \"https://randomuser.me/api/?results=100&nat=us\";\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({ employees: data.results, loading: false, copyOfEmployees: data.results, filteredEmployees: data.results });\n    console.log(data.results);\n    console.log(this.state.employees[0].name.first);\n  }\n\n  handleInputChange = (event) => {\n    event.preventDefault();\n\n    function firstUpper(word) {\n      if (word !== \"\")\n        return word[0].toUpperCase() + word.slice(1)\n      else return word = \"\"\n    }\n\n    const searchTerm = firstUpper(event.target.value);\n\n    // Updating the input's state\n    this.setState({ ...this.state, search: searchTerm });\n\n    const filteredArray = this.state.copyOfEmployees.filter(function (el) {\n      return el.name.first.startsWith(searchTerm, 0)\n    })\n\n    this.setState({ filteredEmployees: filteredArray })\n\n  };\n\n  handleSortOnClick = (event) => {\n    event.preventDefault();\n\n    if (this.state.sortOrder === '^' || this.state.sortOrder === \"\") {\n      const filteredArray = this.state.filteredEmployees\n        .sort((a, b) => (a.name.first < b.name.first) ? 1 : -1);\n\n      this.setState({ sortOrder: 'v' });\n\n      this.setState({ filteredEmployees: filteredArray });\n    }\n    else {\n      const filteredArray = this.state.filteredEmployees\n        .sort((a, b) => (a.name.first > b.name.first) ? 1 : -1);\n\n      this.setState({ sortOrder: '^' });\n\n      this.setState({ filteredEmployees: filteredArray });\n\n    }\n\n  };\n\n  render() {\n\n    return (\n      <div>\n        <div className=\"App-header\">\n          <p className=\"App-title\"> Employee Directory</p>\n          <p className=\"App-subtitle\">Enter a name in the search field to find an employee or click on the name field to sort employee directory in ascending or descending order.</p>\n          {/* Input search button here... */}\n          <form className=\"App-form\">\n            <input\n              value={this.state.search}\n              name=\"search\"\n              onChange={this.handleInputChange}\n              type=\"text\"\n              onKeyPress={e => { if (e.key === 'Enter') e.preventDefault() }}\n            // placeholder=\"Search in here...\"\n            />\n          </form>\n          {/* <button onClick={this.handleSortOnClick}>Click here to sort the list by name.</button> */}\n        </div>\n        <div className=\"App-employee-list\">\n          {/* employee directory here... */}\n          <EmployeeTable currentSort={this.state.sortOrder === '' ? '' : this.state.sortOrder === '^' ? '^' : 'v'} employees={this.state.filteredEmployees} sortClick={this.handleSortOnClick} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}